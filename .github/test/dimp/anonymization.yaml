---
fhirVersion: R4
fhirPathRules:
  - path: Patient.address.country
    method: keep
  - path: Patient.address.state
    method: keep
  - path: Patient.address.postalCode
    method: keep
  # Hier genau der Springende Punkt: generalisieren wir oer default
  # und lassen es nur as-is wenn das Projekt es verlangt?
  - path: Patient.address.postalCode
    method: generalize
    cases:
      "$this": "$this.toString().substring(0,2)"
  - path: Patient.birthDate
    method: generalize
    # generalisiert bis zum Geburtsjahr
    cases:
      "$this": "$this.toString().replaceMatches('(?<year>\\\\d{2,4})-(?<month>\\\\d{2})-(?<day>\\\\d{2})\\\\b', '${year}')"
    otherValues: redact
  - path: nodesByType('Address')
    method: redact
  - path: Resource.id
    method: cryptoHash
  - path: Bundle.entry.fullUrl
    method: cryptoHash
  - path: Bundle.entry.request.url
    method: cryptoHash
  - path: Location.name
    method: redact
  - path: Location.alias
    method: redact
  - path: Location.description
    method: redact
  - path: Location.position
    method: redact
  - path: Substance.description
    method: redact
  # XXX: alle Device identifier?
  - path: Device.udiCarrier
    method: redact
  - path: Device.distinctIdentifier
    method: redact
  - path: Device.serialNumber
    method: redact
  - path: Device.deviceName
    method: redact
  - path: DiagnosticReport.media.comment
    method: redact
  - path: DiagnosticReport.conclusion
    method: redact
  - path: Specimen.processing.description
    method: redact
  - path: Specimen.container.description
    method: redact
  - path: BodyStructure.description
    method: redact
  - path: ImagingStudy.description
    method: redact
  - path: ImagingStudy.series.description
    method: redact
  - path: ImagingStudy.series.instance.title
    method: redact
  - path: MedicationAdministration.dosage.text
    method: redact
  - path: CarePlan.title
    method: redact
  - path: CarePlan.description
    method: redact
  - path: CarePlan.activity.detail.description
    method: redact
  - path: ServiceRequest.patientInstruction
    method: redact
  - path: nodesByType('Expression').description
    method: redact
  - path: nodesByType('Expression').expression
    method: redact
  - path: nodesByType('Attachment').title
    method: redact
  - path: nodesByType('Attachment').url
    method: redact
  - path: nodesByType('CodeableConcept').text
    method: redact
  - path: nodesByType('ContactDetail').name
    method: redact
  # Bei Ausleitungen ist die Frage ob man diese pseudonymisieren
  # oder hashen möchte. Ersteres sicher eher wenn re-identifizierung
  # nötig wäre.
  #- path: nodesByType('Identifier').value
  #  method: cryptoHash
  # ... alternativ
  - path: nodesByType('Identifier').where(type.coding.where(system='http://terminology.hl7.org/CodeSystem/v2-0203' and code='MR').exists()).value
    method: pseudonymize
    domain: patient-identifiers
  - path: nodesByType('Reference').display
    method: redact
  - path: nodesByType('Reference').identifier
    method: redact
  - path: nodesByType('Reference').reference
    method: cryptoHash
  - path: nodesByType('Narrative')
    method: redact
  - path: nodesByType('base64Binary')
    method: redact
  # XXX
  - path: nodesByType('Age')
    method: redact
  - path: nodesByType('Annotation')
    method: redact
  - path: nodesByType('HumanName')
    method: redact
  - path: nodesByType('ContactPoint')
    method: redact