name: CI

on:
  push:
    tags: [ "v*.*.*" ]
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  merge_group:
  branch_protection_rule:
  schedule:
    - cron: '15 7 * * 2'

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.5.0

      - name: Upload lint results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-results-${{ github.run_id }}
          path: |
            golangci-lint-report.xml
          retention-days: 30
          if-no-files-found: ignore

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [lint]
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: true

      - name: Run unit tests
        run: make test-unit

      - name: Generate coverage report
        run: make coverage

      - name: Upload test results and coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results-${{ github.run_id }}
          path: |
            coverage.out
            coverage.html
          retention-days: 90
          if-no-files-found: ignore

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [unit-test]
    steps:
      - name: Placeholder
        run: echo "Integration test job - steps will be added in Phase 5 (User Story 3)"

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [integration-test]
    steps:
      - name: Placeholder
        run: echo "E2E test job - steps will be added in Phase 6 (User Story 4)"
