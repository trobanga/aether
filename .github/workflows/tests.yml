name: Tests

on:
  push:
    tags: [ "v*.*.*" ]
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  merge_group:
  branch_protection_rule:
  schedule:
    - cron: '15 7 * * 2'

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.2'
          cache: true

      - name: Run unit tests
        run: make test-unit

      - name: Generate coverage report
        run: go test -coverprofile=coverage.txt ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: trobanga/aether

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [unit-test]
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.2'
          cache: true

      - name: Run integration tests
        run: make test-integration

      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results-${{ github.run_id }}
          path: |
            test-results-integration.json
          retention-days: 30
          if-no-files-found: ignore

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [integration-test]
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Blazectl
        env:
          # renovate: datasource=github-release-attachments depName=samply/blazectl
          BLAZECTL_VERSION: v1.1.0
          BLAZECTL_CHECKSUM: 42a1795372442fcf3bbc962b6d53560555d2b83eb2a1c31361ba049dc344c059
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: .github/scripts/install-blazectl.sh

      - name: Download test data
        working-directory: .github/test
        run: ../scripts/download-testdata.sh

      - name: Start Docker services
        working-directory: .github/test
        run: docker compose up -d

      - name: Wait for services to be healthy
        run: |
          timeout 60 bash -c 'until docker compose -f .github/test/compose.yaml ps | grep -q "healthy"; do
            echo "Waiting for services to be healthy..."
            sleep 2
          done' || {
            echo "Services failed to become healthy within 60 seconds"
            docker compose -f .github/test/compose.yaml ps
            docker compose -f .github/test/compose.yaml logs
            exit 2
          }

      - name: Fix torch output directory permissions
        run: |
          docker compose -f .github/test/compose.yaml exec -T --user=root torch chown -R 1001:1001 /app/output

      - name: Upload test data to torch-hds
        working-directory: .github/test
        run: ../scripts/upload-testdata.sh

      - name: Install verification tools
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y jq ripgrep

      - name: Run E2E tests with dynamic ports
        working-directory: .github/test
        run: ../scripts/run-e2e-test.sh

      - name: Verify E2E test output
        working-directory: .github/test
        run: |
          JOBS_DIR=./jobs ../scripts/verify-e2e-output.sh

      - name: Upload E2E job outputs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-job-outputs-${{ github.run_id }}
          path: .github/test/jobs/
          retention-days: 7
          if-no-files-found: warn

      - name: Capture service logs on failure
        if: failure()
        run: |
          docker compose -f .github/test/compose.yaml logs > docker-logs-e2e.txt

      - name: Upload service logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: docker-logs-e2e-${{ github.run_id }}
          path: docker-logs-e2e.txt
          retention-days: 7

      - name: Cleanup Docker services
        if: always()
        run: docker compose -f .github/test/compose.yaml down -v
